<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>圈多多</description>
    <link>https://sysu-swsad-team.github.io//</link>
    <atom:link href="https://sysu-swsad-team.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 26 Jun 2019 21:04:12 +0800</pubDate>
    <lastBuildDate>Wed, 26 Jun 2019 21:04:12 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>8.1 代码规范</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#前端代码规范&quot; id=&quot;markdown-toc-前端代码规范&quot;&gt;前端代码规范&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#命名规范&quot; id=&quot;markdown-toc-命名规范&quot;&gt;命名规范&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#目录和文件采用大驼峰命名法&quot; id=&quot;markdown-toc-目录和文件采用大驼峰命名法&quot;&gt;目录和文件采用“大驼峰命名法”&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#id-采用小驼峰命名法&quot; id=&quot;markdown-toc-id-采用小驼峰命名法&quot;&gt;id: 采用“小驼峰命名法”&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#class-采用中划线命名法&quot; id=&quot;markdown-toc-class-采用中划线命名法&quot;&gt;class: 采用“中划线命名法”&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#命名尽量避免使用中文拼音应该采用简明的英文单词进行组合&quot; id=&quot;markdown-toc-命名尽量避免使用中文拼音应该采用简明的英文单词进行组合&quot;&gt;命名尽量避免使用中文拼音，应该采用简明的英文单词进行组合&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#排版规范&quot; id=&quot;markdown-toc-排版规范&quot;&gt;排版规范&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#风格指南&quot; id=&quot;markdown-toc-风格指南&quot;&gt;风格指南&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#组件名为多个单词&quot; id=&quot;markdown-toc-组件名为多个单词&quot;&gt;组件名为多个单词&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#组件数据&quot; id=&quot;markdown-toc-组件数据&quot;&gt;组件数据&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#prop定义&quot; id=&quot;markdown-toc-prop定义&quot;&gt;Prop定义&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#为v-for设置键值&quot; id=&quot;markdown-toc-为v-for设置键值&quot;&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;v-for&lt;/code&gt;设置键值&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#避免v-if和v-for用在一起&quot; id=&quot;markdown-toc-避免v-if和v-for用在一起&quot;&gt;避免&lt;code class=&quot;highlighter-rouge&quot;&gt;v-if&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;v-for&lt;/code&gt;用在一起&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#为组件样式设置作用域&quot; id=&quot;markdown-toc-为组件样式设置作用域&quot;&gt;为组件样式设置作用域&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;前端代码规范&quot;&gt;前端代码规范&lt;/h2&gt;
&lt;h3 id=&quot;命名规范&quot;&gt;命名规范&lt;/h3&gt;
&lt;h4 id=&quot;目录和文件采用大驼峰命名法&quot;&gt;目录和文件采用“大驼峰命名法”&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;例：DataBaseUser：变量DataBaseUser单词首字母大写。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;id-采用小驼峰命名法&quot;&gt;id: 采用“小驼峰命名法”&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;例：myStudentCount：变量myStudentCount第一个单词全部小写，后面的单词首字母大写。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;class-采用中划线命名法&quot;&gt;class: 采用“中划线命名法”&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;例：print-employee-paychecks：函数名中的每一个逻辑断点都有一个中划线来标记。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;命名尽量避免使用中文拼音应该采用简明的英文单词进行组合&quot;&gt;命名尽量避免使用中文拼音，应该采用简明的英文单词进行组合&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;命名注意缩写，但是不能盲目缩写；&lt;/li&gt;
  &lt;li&gt;不允许通过1、2、3等序号进行命名；&lt;/li&gt;
  &lt;li&gt;避免class与id重名；&lt;/li&gt;
  &lt;li&gt;id注意用于标识模块或页面的某一个父容器区域，名称必须唯一，不要随意新建id；&lt;/li&gt;
  &lt;li&gt;class用于标识某一个类型的对象，命名必须言简意赅；&lt;/li&gt;
  &lt;li&gt;尽可能提高代码模块的复用，样式尽量用组合的方式；&lt;/li&gt;
  &lt;li&gt;规则名称中不应该包含颜色、定位等与具体显示效果相关的信息，应该用意义命名，而不是结果名称。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;排版规范&quot;&gt;排版规范&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;如果大括号内为空，则简洁写成&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;，不需要换行。如果大括号内非空，则1）左大括号前不换行有空格；2）左大括号后换行；3）右大括号前换行；4）右大括号后还有&lt;code class=&quot;highlighter-rouge&quot;&gt;else&lt;/code&gt;等代码则不换行；5）表示终止的右大括号后必须换行。&lt;br /&gt;
示例：
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;testFunc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test function&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;左右小括号和中间字符之间不出现空格。&lt;br /&gt;
示例：
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if/for/while/switch&lt;/code&gt;等保留字与括号之间必须加空格。&lt;br /&gt;
示例：
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;二目、三目运算符的左右两边必须加一个空格。&lt;br /&gt;
示例：
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;注释的双斜线与注释内容之间有且只有一个空格。&lt;br /&gt;
示例：
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 我是注释&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/** 我是注释 **/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;多个参数逗号后边必须加空格。&lt;br /&gt;
示例：
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;testFunc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pra1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pra2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pra3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test function&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;风格指南&quot;&gt;风格指南&lt;/h3&gt;
&lt;h4 id=&quot;组件名为多个单词&quot;&gt;组件名为多个单词&lt;/h4&gt;
&lt;p&gt;组件名应该始终为多个单词，Vue内置组件除外。这样做可以避免和现有的以及未来的HTML元素发生冲突，因为所有HTML元素的名称都是单个单词。&lt;br /&gt;
示例：&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;todo-item&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;TodoItem&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;组件数据&quot;&gt;组件数据&lt;/h4&gt;
&lt;p&gt;当在组件中使用&lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt;属性的时候，它的值必须是返回一个对象的函数。&lt;code class=&quot;highlighter-rouge&quot;&gt;new Vue&lt;/code&gt;除外。&lt;br /&gt;
示例：&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;some-comp&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;prop定义&quot;&gt;Prop定义&lt;/h4&gt;
&lt;p&gt;Prop定义应该尽量详细，至少需要指定其类型。&lt;br /&gt;
示例：&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;syncing&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;synced&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;version-conflict&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;为v-for设置键值&quot;&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;v-for&lt;/code&gt;设置键值&lt;/h4&gt;
&lt;p&gt;在组件上总是必须用&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;配合&lt;code class=&quot;highlighter-rouge&quot;&gt;v-for&lt;/code&gt;，以便维护内部组件及其子树的状态。&lt;br /&gt;
示例：&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;todo in todos&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;todo.id&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;避免v-if和v-for用在一起&quot;&gt;避免&lt;code class=&quot;highlighter-rouge&quot;&gt;v-if&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;v-for&lt;/code&gt;用在一起&lt;/h4&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-if=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;shouldShowUsers&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user in users&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user.id&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;为组件样式设置作用域&quot;&gt;为组件样式设置作用域&lt;/h4&gt;
&lt;p&gt;对于应用来说，顶级&lt;code class=&quot;highlighter-rouge&quot;&gt;App&lt;/code&gt;组件和布局组件中的样式可以是全局的，但是其它组件应该是有作用域的。&lt;br /&gt;
示例：&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button button-close&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;X&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 使用 `scoped` 特性 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;scoped&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.button-close&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;参考：&lt;br /&gt;
&lt;a href=&quot;https://cn.vuejs.org/v2/style-guide/index.html&quot;&gt;Vue.js风格指南&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.jianshu.com/p/bfc0650f0033&quot;&gt;命名规范和排版规范&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 28 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//8.%E7%94%9F%E4%BA%A7%E8%A7%84%E8%8C%83%E4%B8%8E%E6%8C%87%E5%8D%97/8.1.%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//8.%E7%94%9F%E4%BA%A7%E8%A7%84%E8%8C%83%E4%B8%8E%E6%8C%87%E5%8D%97/8.1.%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</guid>
        
        
        <category>8.生产规范与指南</category>
        
      </item>
    
      <item>
        <title>7.1 UI design（界面设计）</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#主页&quot; id=&quot;markdown-toc-主页&quot;&gt;主页&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#发布任务&quot; id=&quot;markdown-toc-发布任务&quot;&gt;发布任务&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#钱包充值&quot; id=&quot;markdown-toc-钱包充值&quot;&gt;钱包充值&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;主页&quot;&gt;主页&lt;/h2&gt;
&lt;p&gt;主页界面最上方是板块分区，各个板块中包含对应类别的调差问卷。主页界面底部为功能按钮，仿照微博app的设计。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/home.jpg&quot; alt=&quot;主页&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;发布任务&quot;&gt;发布任务&lt;/h2&gt;
&lt;p&gt;发布任务时可以设置问卷的参数，点击最下方按钮提交。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/task.jpg&quot; alt=&quot;发布任务&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;钱包充值&quot;&gt;钱包充值&lt;/h2&gt;
&lt;p&gt;钱包充值只能支持特定数额的充值，支持三种支付方式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/wallet.jpg&quot; alt=&quot;钱包充值&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 28 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.1.%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.1.%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/</guid>
        
        
        <category>7.设计说明书</category>
        
      </item>
    
      <item>
        <title>8.2 REST API设计规范</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#协议&quot; id=&quot;markdown-toc-协议&quot;&gt;协议&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#url&quot; id=&quot;markdown-toc-url&quot;&gt;URL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#http请求方式&quot; id=&quot;markdown-toc-http请求方式&quot;&gt;http请求方式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#过滤信息&quot; id=&quot;markdown-toc-过滤信息&quot;&gt;过滤信息&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#数据格式&quot; id=&quot;markdown-toc-数据格式&quot;&gt;数据格式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#状态码&quot; id=&quot;markdown-toc-状态码&quot;&gt;状态码&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#get&quot; id=&quot;markdown-toc-get&quot;&gt;GET&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#post&quot; id=&quot;markdown-toc-post&quot;&gt;POST&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#put&quot; id=&quot;markdown-toc-put&quot;&gt;PUT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#delete&quot; id=&quot;markdown-toc-delete&quot;&gt;DELETE&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;协议&quot;&gt;协议&lt;/h2&gt;
&lt;p&gt;使用https协议。&lt;/p&gt;
&lt;h2 id=&quot;url&quot;&gt;URL&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;在RESTful架构中，每个路径代表一种资源，所以路径中不能有动词，只能有名词。所用名词尽量参考数据库表的设计。&lt;/li&gt;
  &lt;li&gt;URL路径名词均为复数。为了保证URL格式的一致性，建议使用复数形式。&lt;/li&gt;
  &lt;li&gt;应该使用连字符”-“来提高URL的可读性，而不是使用下划线”_“。&lt;/li&gt;
  &lt;li&gt;URL路径中首选小写字母。&lt;/li&gt;
  &lt;li&gt;将版本信息放入URL中。
    &lt;h2 id=&quot;http请求方式&quot;&gt;http请求方式&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;GET: 从服务器取出资源（一项或多项）&lt;/li&gt;
  &lt;li&gt;POST: 在服务器新建一个资源&lt;/li&gt;
  &lt;li&gt;PUT: 在服务器更新资源（客户端提供改变后的完整资源）&lt;/li&gt;
  &lt;li&gt;PATCH: 在服务器更新资源（客户端提供改变的属性）&lt;/li&gt;
  &lt;li&gt;DELETE: 从服务器删除资源
    &lt;h2 id=&quot;过滤信息&quot;&gt;过滤信息&lt;/h2&gt;
    &lt;p&gt;在获取资源的时候，有可能需要获取某些“过滤”后的资源，例如指定前10行数据：
&lt;code class=&quot;highlighter-rouge&quot;&gt;http://api.user.com/schools/grades/classes/boys?page=1&amp;amp;page-size=10&lt;/code&gt;&lt;/p&gt;
    &lt;h2 id=&quot;数据格式&quot;&gt;数据格式&lt;/h2&gt;
    &lt;p&gt;使用json数据格式进行数据传递。&lt;/p&gt;
    &lt;h2 id=&quot;状态码&quot;&gt;状态码&lt;/h2&gt;
    &lt;p&gt;RESTful架构应该遵循统一接口原则，统一接口包含了一组受限的预定义的操作，不论什么样的资源，都是通过使用相同的接口进行资源的访问。接口应该使用标准的HTTP方法如GET，PUT和POST，并遵循这些方法的语义。&lt;br /&gt;
如果按照HTTP方法的语义来暴露资源，那么接口将会拥有安全性和幂等性的特性，例如GET和HEAD请求都是安全的，无论请求多少次，都不会改变服务器状态。而GET、HEAD、PUT和DELETE请求都是幂等的，无论对资源操作多少次，结果总是一样的，后面的请求并不会产生比第一次更多的影响。&lt;br /&gt;
下面列出了GET，DELETE，PUT和POST的典型用法：&lt;/p&gt;
    &lt;h3 id=&quot;get&quot;&gt;GET&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;安全且幂等&lt;/li&gt;
  &lt;li&gt;200（OK） 表示已在响应中发出&lt;/li&gt;
  &lt;li&gt;204（无内容） 资源为空&lt;/li&gt;
  &lt;li&gt;301（Moved Permanently） 资源的URL已被更新&lt;/li&gt;
  &lt;li&gt;303（See Other） 其他（如，负载均衡）&lt;/li&gt;
  &lt;li&gt;304（not modified）资源未更改（缓存）&lt;/li&gt;
  &lt;li&gt;400 （bad request）指代坏请求&lt;/li&gt;
  &lt;li&gt;404 （not found）资源不存在&lt;/li&gt;
  &lt;li&gt;406 （not acceptable）服务端不支持所需表示&lt;/li&gt;
  &lt;li&gt;500 （internal server error）通用错误响应&lt;/li&gt;
  &lt;li&gt;503 （Service Unavailable）服务端当前无法处理请求
    &lt;h3 id=&quot;post&quot;&gt;POST&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;不安全且不幂等&lt;/li&gt;
  &lt;li&gt;200（OK）如果现有资源已被更改&lt;/li&gt;
  &lt;li&gt;201（created）如果新资源被创建&lt;/li&gt;
  &lt;li&gt;202（accepted）已接受处理请求但尚未完成（异步处理）&lt;/li&gt;
  &lt;li&gt;301（Moved Permanently）资源的URL被更新&lt;/li&gt;
  &lt;li&gt;303（See Other）其他（如，负载均衡）&lt;/li&gt;
  &lt;li&gt;400（bad request）指代坏请求&lt;/li&gt;
  &lt;li&gt;404 （not found）资源不存在&lt;/li&gt;
  &lt;li&gt;406 （not acceptable）服务端不支持所需表示&lt;/li&gt;
  &lt;li&gt;409 （conflict）通用冲突&lt;/li&gt;
  &lt;li&gt;412 （Precondition Failed）前置条件失败（如执行条件更新时的冲突）&lt;/li&gt;
  &lt;li&gt;415 （unsupported media type）接受到的表示不受支持&lt;/li&gt;
  &lt;li&gt;500 （internal server error）通用错误响应&lt;/li&gt;
  &lt;li&gt;503 （Service Unavailable）服务端当前无法处理请求
    &lt;h3 id=&quot;put&quot;&gt;PUT&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;不安全但幂等&lt;/li&gt;
  &lt;li&gt;200 （OK）如果现有资源已被更改&lt;/li&gt;
  &lt;li&gt;201 （created）如果新资源被创建&lt;/li&gt;
  &lt;li&gt;301（Moved Permanently）资源的URL已更改&lt;/li&gt;
  &lt;li&gt;303 （See Other）其他（如，负载均衡）&lt;/li&gt;
  &lt;li&gt;400 （bad request）指代坏请求&lt;/li&gt;
  &lt;li&gt;404 （not found）资源不存在&lt;/li&gt;
  &lt;li&gt;406 （not acceptable）服务端不支持所需表示&lt;/li&gt;
  &lt;li&gt;409 （conflict）通用冲突&lt;/li&gt;
  &lt;li&gt;412 （Precondition Failed）前置条件失败（如执行条件更新时的冲突）&lt;/li&gt;
  &lt;li&gt;415 （unsupported media type）接受到的表示不受支持&lt;/li&gt;
  &lt;li&gt;500 （internal server error）通用错误响应&lt;/li&gt;
  &lt;li&gt;503 （Service Unavailable）服务端当前无法处理请求
    &lt;h3 id=&quot;delete&quot;&gt;DELETE&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;不安全但幂等&lt;/li&gt;
  &lt;li&gt;200 （OK）资源已被删除&lt;/li&gt;
  &lt;li&gt;301 （Moved Permanently）资源的URIL已更改&lt;/li&gt;
  &lt;li&gt;303 （See Other）其他（如，负载均衡）&lt;/li&gt;
  &lt;li&gt;400 （bad request）指代坏请求&lt;/li&gt;
  &lt;li&gt;404 （not found）资源不存在&lt;/li&gt;
  &lt;li&gt;409 （conflict）通用冲突&lt;/li&gt;
  &lt;li&gt;500 （internal server error）通用错误响应&lt;/li&gt;
  &lt;li&gt;503 （Service Unavailable）服务端当前无法处理请求&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 27 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//8.%E7%94%9F%E4%BA%A7%E8%A7%84%E8%8C%83%E4%B8%8E%E6%8C%87%E5%8D%97/8.2.REST-API-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//8.%E7%94%9F%E4%BA%A7%E8%A7%84%E8%8C%83%E4%B8%8E%E6%8C%87%E5%8D%97/8.2.REST-API-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</guid>
        
        
        <category>8.生产规范与指南</category>
        
      </item>
    
      <item>
        <title>7.2 Database design（数据库设计）</title>
        <description>
&lt;p&gt;蓝框部分为&lt;strong&gt;用户及权限系统数据库设计&lt;/strong&gt;，其余为&lt;strong&gt;子系统数据库设计&lt;/strong&gt;。
&lt;img src=&quot;/styles/images/7.2/auth-system.jpg&quot; alt=&quot;数据库设计&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 27 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.2.%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.2.%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</guid>
        
        
        <category>7.设计说明书</category>
        
      </item>
    
      <item>
        <title>8.3 协作开发规范</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-准备工作&quot; id=&quot;markdown-toc-1-准备工作&quot;&gt;1 准备工作&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#21-协作方式-1&quot; id=&quot;markdown-toc-21-协作方式-1&quot;&gt;2.1 协作方式-1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#22-协作方式-2&quot; id=&quot;markdown-toc-22-协作方式-2&quot;&gt;2.2 协作方式-2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-备注&quot; id=&quot;markdown-toc-3-备注&quot;&gt;3 备注&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考：https://github.com/SYSUMonkeyEye/MonkeyEye-FE&lt;/p&gt;

&lt;p&gt;每个仓库一般仓库有2个分支，master和dev。主要在 dev 分支上进行开发和测试，功能完善之后再合并到master。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├─master
└─dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;1-准备工作&quot;&gt;1 准备工作&lt;/h2&gt;

&lt;p&gt;在 github 上 fork 仓库到你自己的 github，将你 fork 之后的远程仓库克隆到本地，并在你的本地仓库上添加上游仓库，即源仓库。fork 一般是 fork 了仓库的 master 分支，所以可能还需要自己去切出 dev 分支然后拉取源仓库dev 分支上的内容。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/{你的github}/{仓库名称}
# 上游的源仓库地址只需添加一次
git remote add upstream https://github.com/sysu-swsad-team/{仓库名称.git}
# 切出dev分支并拉取源仓库dev分支上的内容
git checkout -b dev
git pull upstream dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;21-协作方式-1&quot;&gt;2.1 协作方式-1&lt;/h2&gt;

&lt;p&gt;要开发某个模块的时候，在你的本地仓库创建一个分支，例如 mydev。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout -b mydev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;切换之后你的本地仓库上就有3个分支了，如下所示。checkout 之后会自动切换到 mydev 分支。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├─master
├─dev
└─mydev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在 mydev 分支上进行开发和测试，完成相应的功能或者模块，完成之后再切回到 dev 分支将 mydev 的内容合并到 dev。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# mydev分支上提交你的更新
git add *
git commit -m &quot;add something&quot;
# 切换到dev分支
git checkout dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;由于在你开发过程中，我也可能在开发并且更新了仓库，为了避免冲突，在合并分支之前你还需要更新你本地仓库的 dev 分支。先在本地仓库上添加上游仓库 upstream，上游仓库即我的仓库，然后使用 pull 命令从上游仓库拉取更新。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 拉取上游的源仓库dev分支上的更新
git pull upstream dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;更新完 dev 之后，将 mydev 分支合并到 dev 分支并提交到你自己的远程仓库。完成之后，mydev 分支就可以删除了，你也可以继续留着。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 将mydev分支合并到dev，可能会有冲突需要自行解决
git merge mydev
# 推送到你自己的远程仓库，注意这里是push到origin dev，不是upstream dev
git push origin dev
# 删除mydev分支
git branch -d mydev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;推送到自己的远程仓库后，就可以到 github 上面给我发 Pull Request 了，然后等待我合并你的代码。&lt;/p&gt;

&lt;h2 id=&quot;22-协作方式-2&quot;&gt;2.2 协作方式-2&lt;/h2&gt;

&lt;p&gt;嫌上面太麻烦？你也可以直接在 fork 之后的的 dev 分支上面进行开发，然后在发送 PR 之前先从源仓库拉取更新。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 提交你的代码
git add *
git commit -m &quot;add something&quot;
# 拉取上游的源仓库dev分支上的更新，可能会有冲突需要自行解决
git pull upstream dev
# 推送到你自己的远程仓库，注意这里是push到origin dev，不是upstream dev
git push origin dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-备注&quot;&gt;3 备注&lt;/h2&gt;

&lt;p&gt;所有拉取远程仓库的更新的操作请在本地仓库上使用命令行完成。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 拉取上游的源仓库dev分支上的更新
git pull upstream dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;严禁通过其他做法拉取更新（例如在GitHub网站上通过网页操作进行更新然后在本地pull origin dev），以免造成不必要的合并冲突以及多余的commit。&lt;/p&gt;
</description>
        <pubDate>Sun, 26 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//8.%E7%94%9F%E4%BA%A7%E8%A7%84%E8%8C%83%E4%B8%8E%E6%8C%87%E5%8D%97/8.3.%E5%8D%8F%E4%BD%9C%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//8.%E7%94%9F%E4%BA%A7%E8%A7%84%E8%8C%83%E4%B8%8E%E6%8C%87%E5%8D%97/8.3.%E5%8D%8F%E4%BD%9C%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</guid>
        
        
        <category>8.生产规范与指南</category>
        
      </item>
    
      <item>
        <title>7.3 Interface API design（接口 API 设计）</title>
        <description>
&lt;p&gt;按照 &lt;a href=&quot;https://github.com/sysu-swsad-team/niffler-backend&quot;&gt;https://github.com/sysu-swsad-team/niffler-backend&lt;/a&gt; 安装并运行后端，浏览器访问&lt;code class=&quot;highlighter-rouge&quot;&gt;$服务器url(如http://127.0.0.1:8000)/questionnaire/swagger/&lt;/code&gt;即可看到基于swagger的可交互api文档。&lt;/p&gt;

&lt;p&gt;截图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.3/api_doc.png&quot; alt=&quot;api文档&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 26 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.3.%E6%8E%A5%E5%8F%A3API%E8%AE%BE%E8%AE%A1/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.3.%E6%8E%A5%E5%8F%A3API%E8%AE%BE%E8%AE%A1/</guid>
        
        
        <category>7.设计说明书</category>
        
      </item>
    
      <item>
        <title>7.4 Architecture design（架构设计）</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#架构问题&quot; id=&quot;markdown-toc-架构问题&quot;&gt;架构问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#解决方案说明&quot; id=&quot;markdown-toc-解决方案说明&quot;&gt;解决方案说明&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#逻辑视图&quot; id=&quot;markdown-toc-逻辑视图&quot;&gt;逻辑视图&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#物理视图&quot; id=&quot;markdown-toc-物理视图&quot;&gt;物理视图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;架构问题&quot;&gt;架构问题&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;服务外部用户&lt;/li&gt;
  &lt;li&gt;需求变动快&lt;/li&gt;
  &lt;li&gt;运用规模变化大&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;解决方案说明&quot;&gt;解决方案说明&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;按照不同服务功能拆分微服务&lt;br /&gt;
  一个服务完成一个独立的功能，独立维护，按需扩展&lt;/li&gt;
  &lt;li&gt;前后端分离&lt;br /&gt;
  优化用户体验，接口简洁易维护，实现前端多渠道集成&lt;/li&gt;
  &lt;li&gt;无状态服务&lt;br /&gt;
  把数据迁移到分布式缓存中存储，让业务服务变成一个无状态的计算节点，实现服务按需动态伸缩&lt;/li&gt;
  &lt;li&gt;Restful通信风格&lt;br /&gt;
  无状态协议HTTP扩展能力强，JSON 报文序列化轻量简单，语言无关&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;逻辑视图&quot;&gt;逻辑视图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/styles/images/7.4/logicView.jpg&quot; alt=&quot;逻辑视图&quot; height=&quot;60%&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;物理视图&quot;&gt;物理视图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/styles/images/7.4/physicalView.jpg&quot; alt=&quot;物理视图&quot; height=&quot;90%&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;参考&lt;br /&gt;
&lt;a href=&quot;https://juejin.im/entry/59bf30876fb9a00a583176a1&quot;&gt;微服务的4大设计原则和19个解决方案&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 25 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.4.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.4.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid>
        
        
        <category>7.设计说明书</category>
        
      </item>
    
      <item>
        <title>7.5 Usecase design（用例设计）</title>
        <description>
&lt;p&gt;&lt;a href=&quot;https://sysu-swsad.github.io/swad-guide/12-usecase-realization&quot;&gt;详细设计 - 使用交互图和设计类图实现用例&lt;/a&gt; 团队作业&lt;/p&gt;
</description>
        <pubDate>Fri, 24 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.5.%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.5.%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1/</guid>
        
        
        <category>7.设计说明书</category>
        
      </item>
    
      <item>
        <title>6.1 Usecase Diagram（用例图）</title>
        <description>
&lt;p&gt;&lt;img src=&quot;https://github.com/sysu-swsad-team/sysu-swsad-team.github.io/raw/master/_posts/images/UML/用例图.jpg&quot; alt=&quot;用例图&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 12 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//6.%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6/6.1.%E7%94%A8%E4%BE%8B%E5%9B%BE/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//6.%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6/6.1.%E7%94%A8%E4%BE%8B%E5%9B%BE/</guid>
        
        
        <category>6.需求规格说明书</category>
        
      </item>
    
      <item>
        <title>6.2 Use Cases（用例与活动图）</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#详述用例&quot; id=&quot;markdown-toc-详述用例&quot;&gt;详述用例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#非正式用例&quot; id=&quot;markdown-toc-非正式用例&quot;&gt;非正式用例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#摘要用例&quot; id=&quot;markdown-toc-摘要用例&quot;&gt;摘要用例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;详述用例&quot;&gt;详述用例&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;用例UC1：做任务&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;范围&lt;/strong&gt;：圈多多（Niffler）应用&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;级别&lt;/strong&gt;：用户目标&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主要参与者&lt;/strong&gt;：大学生&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;涉众及其关注点&lt;/strong&gt;：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;大学生：希望能够准确地筛选感兴趣的任务。希望能够便捷、清晰地查询任务描述和任务薪酬。希望能够在完成任务后，及时、准确地获得相应数额的“闲钱币”。&lt;/li&gt;
  &lt;li&gt;任务发布者：希望发布的任务能够得到有效的完成。希望能够快速审核已完成任务并进行确认。&lt;/li&gt;
  &lt;li&gt;圈多多团队：希望能够准确地记录任务完成信息。希望在任务发布者确认任务已完成后，自动、快速、准确地将“闲钱币”放入相应账号的钱包中。希望有一定的容错性和可恢复性。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;前置条件&lt;/strong&gt;：大学生必须登录账号。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;成功保证（或后置条件）&lt;/strong&gt;：记录任务完成相关信息。更新财务信息。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主成功场景（或基本流程）&lt;/strong&gt;：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;用户打开圈多多应用，此时已默认登录上一次登录的账号。&lt;/li&gt;
  &lt;li&gt;系统进入任务类型界面（做任务或发布任务）。&lt;/li&gt;
  &lt;li&gt;用户选择做任务功能。&lt;/li&gt;
  &lt;li&gt;系统进入做任务可选项界面（问卷调查任务或跑腿任务）。&lt;/li&gt;
  &lt;li&gt;用户选择问卷调查任务或跑腿任务。&lt;/li&gt;
  &lt;li&gt;系统按照账号初始标签显示任务列表。&lt;/li&gt;
  &lt;li&gt;用户通过标签、薪酬、最新、最热等进一步筛选任务列表。&lt;/li&gt;
  &lt;li&gt;用户查看自己感兴趣的任务。&lt;/li&gt;
  &lt;li&gt;系统显示任务详情。任务详情包括任务描述、任务薪酬、任务剩余次数、任务过期时间、是否可重复等。&lt;/li&gt;
  &lt;li&gt;用户选择接受任务。&lt;/li&gt;
  &lt;li&gt;系统将任务添加到待完成任务列表。&lt;/li&gt;
  &lt;li&gt;用户查看待完成任务列表。&lt;/li&gt;
  &lt;li&gt;用户选择完成任务。&lt;/li&gt;
  &lt;li&gt;问卷调查任务由系统自动确认已完成任务；跑腿任务由任务发布者确认已完成任务。&lt;/li&gt;
  &lt;li&gt;系统为相应账号的钱包增加相应数额的“闲钱币”。&lt;/li&gt;
  &lt;li&gt;系统记录完整的任务完成相关信息，并更新财务信息。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;扩展（或替代流程）&lt;/strong&gt;：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;*a. 系统在任意时刻失败：
    &lt;ol&gt;
      &lt;li&gt;系统保存意外退出时的账号状态。&lt;/li&gt;
      &lt;li&gt;用户重启系统，请求恢复上次状态。&lt;/li&gt;
      &lt;li&gt;系统重建上次状态，恢复意外退出时的界面信息。
        &lt;ul&gt;
          &lt;li&gt;3a. 系统在恢复过程中检测到异常：
            &lt;ol&gt;
              &lt;li&gt;系统向用户提示错误，并记录此错误。&lt;/li&gt;
              &lt;li&gt;系统进入一个初始状态（即进入任务类型界面）。&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;4-9a. 用户需要重新选择问卷调查任务或跑腿任务：
    &lt;ol&gt;
      &lt;li&gt;用户选择返回功能。&lt;/li&gt;
      &lt;li&gt;系统进入做任务可选项界面。&lt;/li&gt;
      &lt;li&gt;用户重新选择问卷调查任务或跑腿任务。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;7a. 用户需要重置任务列表：
    &lt;ol&gt;
      &lt;li&gt;用户选择重置功能。&lt;/li&gt;
      &lt;li&gt;系统按照账户初始标签显示任务列表。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;10-13a. 用户需要放弃任务：
    &lt;ol&gt;
      &lt;li&gt;用户选择放弃任务功能。&lt;/li&gt;
      &lt;li&gt;相应任务更新信息，例如，剩余次数加一。&lt;/li&gt;
      &lt;li&gt;系统记录放弃任务相关信息。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;10-13b. 任务超时：
    &lt;ol&gt;
      &lt;li&gt;系统提示用户任务超时。&lt;/li&gt;
      &lt;li&gt;系统将任务从待完成列表移除。&lt;/li&gt;
      &lt;li&gt;系统记录任务超时相关信息，并更新财务信息。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;10-13c. 任务发布者提前终止任务：
    &lt;ol&gt;
      &lt;li&gt;系统提示用户任务发布者提前终止任务。&lt;/li&gt;
      &lt;li&gt;系统将任务从待完成列表移除。&lt;/li&gt;
      &lt;li&gt;系统记录提前终止相关信息，并更新财务信息。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;14a. 对于跑腿任务，任务发布者未在规定时间内确认用户已完成任务：
    &lt;ol&gt;
      &lt;li&gt;系统自动确认用户已完成任务。&lt;/li&gt;
      &lt;li&gt;系统提示任务发布者已自动确认任务完成。&lt;/li&gt;
      &lt;li&gt;系统记录自动确认任务完成相关信息。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;特殊需求&lt;/strong&gt;：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;由于某些原因，我们希望在访问远程服务（如财务系统）失败的情况下具有比较强的恢复功能。&lt;/li&gt;
  &lt;li&gt;支持文本显示的语言国际化。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;技术与数据变元表&lt;/strong&gt;：暂无。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;发生频率&lt;/strong&gt;：可能会不断地发生。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;未决问题&lt;/strong&gt;：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;研究远程服务的恢复问题。&lt;/li&gt;
  &lt;li&gt;对于跑腿任务，如果任务发布者否认已完成任务，该怎样进行协调。&lt;/li&gt;
  &lt;li&gt;任务剩余次数为0后，系统将此任务从任务显示列表移除。如果之后存在用户放弃任务的行为发生，此任务将重新出现在任务显示列表。是否应该提升此任务优先级。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;活动图&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sysu-swsad-team/sysu-swsad-team.github.io/raw/master/_posts/images/UML/活动图_做任务.jpg&quot; alt=&quot;活动图_做任务&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;非正式用例&quot;&gt;非正式用例&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;用例UC2：发布任务&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主成功场景&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;发布者打开圈多多应用，系统进入任务类型界面（做任务或发布任务）。发布者选择发布任务功能，系统进入发布任务可选项界面（问卷调查任务或跑腿任务）。系统进入任务描述界面。发布者填写任务描述。发布者进一步填写任务最大数量、单价、超时时间等信息。系统自动计算总价。发布者使用“闲钱币”进行支付，系统提示任务发布成功。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;交替场景&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;任务发布者选择发布任务功能后，如果希望放弃发布任务，选择放弃发布任务功能，系统记录相关信息并进入发布任务可选项界面。&lt;/p&gt;

&lt;p&gt;任务发布者发布任务成功后，如果希望提前终止任务，选择提前终止任务功能，系统自动计算“闲钱币”返还数额并返还至相应账户的钱包。&lt;/p&gt;

&lt;p&gt;任务发布者发布任务成功后，如果任务过期，系统提示发布者任务已过期。系统自动计算“闲钱币”返还数额并返还至相应账户的钱包。&lt;/p&gt;

&lt;p&gt;任务发布者在支付过程中，如果发现“闲钱币”余额不足，可以选择微信、支付宝等方式进行“闲钱币”充值。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;活动图&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sysu-swsad-team/sysu-swsad-team.github.io/raw/master/_posts/images/UML/活动图_发布任务.jpg&quot; alt=&quot;活动图_发布任务&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;摘要用例&quot;&gt;摘要用例&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;用例UC3.1：注册/登录&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;用户打开圈多多应用。如果没有注册，选择注册功能，填写姓名、学号、年龄、性别、年级和专业等信息，并上传学生证正面照片进行验证。验证成功后，可以设置昵称、头像，选择感兴趣的标签，并绑定邮箱或手机号。如果已经注册，选择登录功能，用户通过邮箱或手机号进行登录。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用例UC3.2：提现“闲钱币”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;用户选择提现功能，账户得到验证之后，将“闲钱币”可用余额转入到第三方支付系统。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用例UC3.3：举报任务&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;用户发现不恰当任务，可以选择举报任务功能。任务被举报次数达到阈值后，将交由管理员进行审核。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用例UC3.4：审核任务&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;管理员定期对被举报次数达到阈值的任务进行审核。如果审核结果为任务不恰当，将下架此任务，并扣除任务发布者一定比例“闲钱币”作为惩罚。否则将被举报次数清零。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用例UC3.5：评价用户&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;任务发布者可以对完成跑腿任务的用户进行评价。评价结果对其它用户可见。&lt;/p&gt;
</description>
        <pubDate>Sat, 11 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//6.%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6/6.2.%E7%94%A8%E4%BE%8B%E4%B8%8E%E6%B4%BB%E5%8A%A8%E5%9B%BE/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//6.%E9%9C%80%E6%B1%82%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E%E4%B9%A6/6.2.%E7%94%A8%E4%BE%8B%E4%B8%8E%E6%B4%BB%E5%8A%A8%E5%9B%BE/</guid>
        
        
        <category>6.需求规格说明书</category>
        
      </item>
    
  </channel>
</rss>
