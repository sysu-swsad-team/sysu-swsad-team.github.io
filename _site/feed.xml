<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>圈多多</description>
    <link>https://sysu-swsad-team.github.io//</link>
    <atom:link href="https://sysu-swsad-team.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 28 Jun 2019 01:04:48 +0800</pubDate>
    <lastBuildDate>Fri, 28 Jun 2019 01:04:48 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>8.1 代码规范</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#前端代码规范&quot; id=&quot;markdown-toc-前端代码规范&quot;&gt;前端代码规范&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#命名规范&quot; id=&quot;markdown-toc-命名规范&quot;&gt;命名规范&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#目录和文件采用大驼峰命名法&quot; id=&quot;markdown-toc-目录和文件采用大驼峰命名法&quot;&gt;目录和文件采用“大驼峰命名法”&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#id-采用小驼峰命名法&quot; id=&quot;markdown-toc-id-采用小驼峰命名法&quot;&gt;id: 采用“小驼峰命名法”&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#class-采用中划线命名法&quot; id=&quot;markdown-toc-class-采用中划线命名法&quot;&gt;class: 采用“中划线命名法”&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#命名尽量避免使用中文拼音应该采用简明的英文单词进行组合&quot; id=&quot;markdown-toc-命名尽量避免使用中文拼音应该采用简明的英文单词进行组合&quot;&gt;命名尽量避免使用中文拼音，应该采用简明的英文单词进行组合&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#排版规范&quot; id=&quot;markdown-toc-排版规范&quot;&gt;排版规范&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#风格指南&quot; id=&quot;markdown-toc-风格指南&quot;&gt;风格指南&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#组件名为多个单词&quot; id=&quot;markdown-toc-组件名为多个单词&quot;&gt;组件名为多个单词&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#组件数据&quot; id=&quot;markdown-toc-组件数据&quot;&gt;组件数据&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#prop定义&quot; id=&quot;markdown-toc-prop定义&quot;&gt;Prop定义&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#为v-for设置键值&quot; id=&quot;markdown-toc-为v-for设置键值&quot;&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;v-for&lt;/code&gt;设置键值&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#避免v-if和v-for用在一起&quot; id=&quot;markdown-toc-避免v-if和v-for用在一起&quot;&gt;避免&lt;code class=&quot;highlighter-rouge&quot;&gt;v-if&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;v-for&lt;/code&gt;用在一起&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#为组件样式设置作用域&quot; id=&quot;markdown-toc-为组件样式设置作用域&quot;&gt;为组件样式设置作用域&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;前端代码规范&quot;&gt;前端代码规范&lt;/h2&gt;
&lt;h3 id=&quot;命名规范&quot;&gt;命名规范&lt;/h3&gt;
&lt;h4 id=&quot;目录和文件采用大驼峰命名法&quot;&gt;目录和文件采用“大驼峰命名法”&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;例：DataBaseUser：变量DataBaseUser单词首字母大写。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;id-采用小驼峰命名法&quot;&gt;id: 采用“小驼峰命名法”&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;例：myStudentCount：变量myStudentCount第一个单词全部小写，后面的单词首字母大写。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;class-采用中划线命名法&quot;&gt;class: 采用“中划线命名法”&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;例：print-employee-paychecks：函数名中的每一个逻辑断点都有一个中划线来标记。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;命名尽量避免使用中文拼音应该采用简明的英文单词进行组合&quot;&gt;命名尽量避免使用中文拼音，应该采用简明的英文单词进行组合&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;命名注意缩写，但是不能盲目缩写；&lt;/li&gt;
  &lt;li&gt;不允许通过1、2、3等序号进行命名；&lt;/li&gt;
  &lt;li&gt;避免class与id重名；&lt;/li&gt;
  &lt;li&gt;id注意用于标识模块或页面的某一个父容器区域，名称必须唯一，不要随意新建id；&lt;/li&gt;
  &lt;li&gt;class用于标识某一个类型的对象，命名必须言简意赅；&lt;/li&gt;
  &lt;li&gt;尽可能提高代码模块的复用，样式尽量用组合的方式；&lt;/li&gt;
  &lt;li&gt;规则名称中不应该包含颜色、定位等与具体显示效果相关的信息，应该用意义命名，而不是结果名称。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;排版规范&quot;&gt;排版规范&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;如果大括号内为空，则简洁写成&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;，不需要换行。如果大括号内非空，则1）左大括号前不换行有空格；2）左大括号后换行；3）右大括号前换行；4）右大括号后还有&lt;code class=&quot;highlighter-rouge&quot;&gt;else&lt;/code&gt;等代码则不换行；5）表示终止的右大括号后必须换行。&lt;br /&gt;
示例：
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;testFunc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test function&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;左右小括号和中间字符之间不出现空格。&lt;br /&gt;
示例：
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if/for/while/switch&lt;/code&gt;等保留字与括号之间必须加空格。&lt;br /&gt;
示例：
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;二目、三目运算符的左右两边必须加一个空格。&lt;br /&gt;
示例：
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;注释的双斜线与注释内容之间有且只有一个空格。&lt;br /&gt;
示例：
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 我是注释&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/** 我是注释 **/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;多个参数逗号后边必须加空格。&lt;br /&gt;
示例：
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;testFunc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pra1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pra2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pra3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test function&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;风格指南&quot;&gt;风格指南&lt;/h3&gt;
&lt;h4 id=&quot;组件名为多个单词&quot;&gt;组件名为多个单词&lt;/h4&gt;
&lt;p&gt;组件名应该始终为多个单词，Vue内置组件除外。这样做可以避免和现有的以及未来的HTML元素发生冲突，因为所有HTML元素的名称都是单个单词。&lt;br /&gt;
示例：&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;todo-item&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;TodoItem&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;组件数据&quot;&gt;组件数据&lt;/h4&gt;
&lt;p&gt;当在组件中使用&lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt;属性的时候，它的值必须是返回一个对象的函数。&lt;code class=&quot;highlighter-rouge&quot;&gt;new Vue&lt;/code&gt;除外。&lt;br /&gt;
示例：&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;some-comp&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;prop定义&quot;&gt;Prop定义&lt;/h4&gt;
&lt;p&gt;Prop定义应该尽量详细，至少需要指定其类型。&lt;br /&gt;
示例：&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;syncing&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;synced&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;version-conflict&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;为v-for设置键值&quot;&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;v-for&lt;/code&gt;设置键值&lt;/h4&gt;
&lt;p&gt;在组件上总是必须用&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;配合&lt;code class=&quot;highlighter-rouge&quot;&gt;v-for&lt;/code&gt;，以便维护内部组件及其子树的状态。&lt;br /&gt;
示例：&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;todo in todos&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;todo.id&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;避免v-if和v-for用在一起&quot;&gt;避免&lt;code class=&quot;highlighter-rouge&quot;&gt;v-if&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;v-for&lt;/code&gt;用在一起&lt;/h4&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-if=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;shouldShowUsers&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user in users&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user.id&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;为组件样式设置作用域&quot;&gt;为组件样式设置作用域&lt;/h4&gt;
&lt;p&gt;对于应用来说，顶级&lt;code class=&quot;highlighter-rouge&quot;&gt;App&lt;/code&gt;组件和布局组件中的样式可以是全局的，但是其它组件应该是有作用域的。&lt;br /&gt;
示例：&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button button-close&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;X&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 使用 `scoped` 特性 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;scoped&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.button-close&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;参考：&lt;br /&gt;
&lt;a href=&quot;https://cn.vuejs.org/v2/style-guide/index.html&quot;&gt;Vue.js风格指南&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.jianshu.com/p/bfc0650f0033&quot;&gt;命名规范和排版规范&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 28 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//8.%E7%94%9F%E4%BA%A7%E8%A7%84%E8%8C%83%E4%B8%8E%E6%8C%87%E5%8D%97/8.1.%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//8.%E7%94%9F%E4%BA%A7%E8%A7%84%E8%8C%83%E4%B8%8E%E6%8C%87%E5%8D%97/8.1.%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</guid>
        
        
        <category>8.生产规范与指南</category>
        
      </item>
    
      <item>
        <title>7.1 UI design（界面设计）</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-总体设计&quot; id=&quot;markdown-toc-1-总体设计&quot;&gt;1 总体设计&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-登录与注册界面&quot; id=&quot;markdown-toc-2-登录与注册界面&quot;&gt;2 登录与注册界面&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#登录&quot; id=&quot;markdown-toc-登录&quot;&gt;登录&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#注册&quot; id=&quot;markdown-toc-注册&quot;&gt;注册&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-主页&quot; id=&quot;markdown-toc-3-主页&quot;&gt;3 主页&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#header&quot; id=&quot;markdown-toc-header&quot;&gt;Header&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#个人信息&quot; id=&quot;markdown-toc-个人信息&quot;&gt;个人信息&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#设置个人信息&quot; id=&quot;markdown-toc-设置个人信息&quot;&gt;设置个人信息&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-问卷系统&quot; id=&quot;markdown-toc-4-问卷系统&quot;&gt;4 问卷系统&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#问卷列表&quot; id=&quot;markdown-toc-问卷列表&quot;&gt;问卷列表&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#创建问卷&quot; id=&quot;markdown-toc-创建问卷&quot;&gt;创建问卷&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#我的问卷&quot; id=&quot;markdown-toc-我的问卷&quot;&gt;我的问卷&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-跑腿办事&quot; id=&quot;markdown-toc-5-跑腿办事&quot;&gt;5 跑腿办事&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#活动列表&quot; id=&quot;markdown-toc-活动列表&quot;&gt;活动列表&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#创建任务&quot; id=&quot;markdown-toc-创建任务&quot;&gt;创建任务&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#我的任务&quot; id=&quot;markdown-toc-我的任务&quot;&gt;我的任务&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-总体设计&quot;&gt;1 总体设计&lt;/h2&gt;

&lt;p&gt;主题颜色为 &lt;code class=&quot;highlighter-rouge&quot;&gt;#1D365D&lt;/code&gt;，使用 &lt;a href=&quot;https://element.eleme.cn/#/zh-CN&quot;&gt;Element-UI&lt;/a&gt; 生成配色方案：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/color.png&quot; alt=&quot;color&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-登录与注册界面&quot;&gt;2 登录与注册界面&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/sigin.gif&quot; alt=&quot;sigin&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;登录&quot;&gt;登录&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/signin.png&quot; alt=&quot;signin&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;注册&quot;&gt;注册&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/signup.png&quot; alt=&quot;signup&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-主页&quot;&gt;3 主页&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/home.png&quot; alt=&quot;home&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;header&quot;&gt;Header&lt;/h3&gt;

&lt;p&gt;功能模块&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/header_card.png&quot; alt=&quot;header_card&quot; /&gt;&lt;/p&gt;

&lt;p&gt;用户头像与菜单&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/header_ava.png&quot; alt=&quot;header_ava&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;个人信息&quot;&gt;个人信息&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/profile.png&quot; alt=&quot;profile&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;设置个人信息&quot;&gt;设置个人信息&lt;/h3&gt;

&lt;p&gt;更改头照片&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/setAva.png&quot; alt=&quot;setAva&quot; /&gt;&lt;/p&gt;

&lt;p&gt;更改其他&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/setBirth.png&quot; alt=&quot;setBirth&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-问卷系统&quot;&gt;4 问卷系统&lt;/h2&gt;

&lt;h3 id=&quot;问卷列表&quot;&gt;问卷列表&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/qn.png&quot; alt=&quot;qn&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;创建问卷&quot;&gt;创建问卷&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/createqn.png&quot; alt=&quot;createqn&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;我的问卷&quot;&gt;我的问卷&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/myqn.png&quot; alt=&quot;myqn&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-跑腿办事&quot;&gt;5 跑腿办事&lt;/h2&gt;

&lt;h3 id=&quot;活动列表&quot;&gt;活动列表&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/errand.png&quot; alt=&quot;errand&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;创建任务&quot;&gt;创建任务&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/createEr.png&quot; alt=&quot;createEr&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;我的任务&quot;&gt;我的任务&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.1/myEr.png&quot; alt=&quot;myEr&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 28 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.1.%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.1.%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/</guid>
        
        
        <category>7.设计说明书</category>
        
      </item>
    
      <item>
        <title>8.2 REST API设计规范</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#协议&quot; id=&quot;markdown-toc-协议&quot;&gt;协议&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#url&quot; id=&quot;markdown-toc-url&quot;&gt;URL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#http请求方式&quot; id=&quot;markdown-toc-http请求方式&quot;&gt;http请求方式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#过滤信息&quot; id=&quot;markdown-toc-过滤信息&quot;&gt;过滤信息&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#数据格式&quot; id=&quot;markdown-toc-数据格式&quot;&gt;数据格式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#状态码&quot; id=&quot;markdown-toc-状态码&quot;&gt;状态码&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#get&quot; id=&quot;markdown-toc-get&quot;&gt;GET&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#post&quot; id=&quot;markdown-toc-post&quot;&gt;POST&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#put&quot; id=&quot;markdown-toc-put&quot;&gt;PUT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#delete&quot; id=&quot;markdown-toc-delete&quot;&gt;DELETE&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;协议&quot;&gt;协议&lt;/h2&gt;
&lt;p&gt;使用https协议。&lt;/p&gt;
&lt;h2 id=&quot;url&quot;&gt;URL&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;在RESTful架构中，每个路径代表一种资源，所以路径中不能有动词，只能有名词。所用名词尽量参考数据库表的设计。&lt;/li&gt;
  &lt;li&gt;URL路径名词均为复数。为了保证URL格式的一致性，建议使用复数形式。&lt;/li&gt;
  &lt;li&gt;应该使用连字符”-“来提高URL的可读性，而不是使用下划线”_“。&lt;/li&gt;
  &lt;li&gt;URL路径中首选小写字母。&lt;/li&gt;
  &lt;li&gt;将版本信息放入URL中。
    &lt;h2 id=&quot;http请求方式&quot;&gt;http请求方式&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;GET: 从服务器取出资源（一项或多项）&lt;/li&gt;
  &lt;li&gt;POST: 在服务器新建一个资源&lt;/li&gt;
  &lt;li&gt;PUT: 在服务器更新资源（客户端提供改变后的完整资源）&lt;/li&gt;
  &lt;li&gt;PATCH: 在服务器更新资源（客户端提供改变的属性）&lt;/li&gt;
  &lt;li&gt;DELETE: 从服务器删除资源
    &lt;h2 id=&quot;过滤信息&quot;&gt;过滤信息&lt;/h2&gt;
    &lt;p&gt;在获取资源的时候，有可能需要获取某些“过滤”后的资源，例如指定前10行数据：
&lt;code class=&quot;highlighter-rouge&quot;&gt;http://api.user.com/schools/grades/classes/boys?page=1&amp;amp;page-size=10&lt;/code&gt;&lt;/p&gt;
    &lt;h2 id=&quot;数据格式&quot;&gt;数据格式&lt;/h2&gt;
    &lt;p&gt;使用json数据格式进行数据传递。&lt;/p&gt;
    &lt;h2 id=&quot;状态码&quot;&gt;状态码&lt;/h2&gt;
    &lt;p&gt;RESTful架构应该遵循统一接口原则，统一接口包含了一组受限的预定义的操作，不论什么样的资源，都是通过使用相同的接口进行资源的访问。接口应该使用标准的HTTP方法如GET，PUT和POST，并遵循这些方法的语义。&lt;br /&gt;
如果按照HTTP方法的语义来暴露资源，那么接口将会拥有安全性和幂等性的特性，例如GET和HEAD请求都是安全的，无论请求多少次，都不会改变服务器状态。而GET、HEAD、PUT和DELETE请求都是幂等的，无论对资源操作多少次，结果总是一样的，后面的请求并不会产生比第一次更多的影响。&lt;br /&gt;
下面列出了GET，DELETE，PUT和POST的典型用法：&lt;/p&gt;
    &lt;h3 id=&quot;get&quot;&gt;GET&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;安全且幂等&lt;/li&gt;
  &lt;li&gt;200（OK） 表示已在响应中发出&lt;/li&gt;
  &lt;li&gt;204（无内容） 资源为空&lt;/li&gt;
  &lt;li&gt;301（Moved Permanently） 资源的URL已被更新&lt;/li&gt;
  &lt;li&gt;303（See Other） 其他（如，负载均衡）&lt;/li&gt;
  &lt;li&gt;304（not modified）资源未更改（缓存）&lt;/li&gt;
  &lt;li&gt;400 （bad request）指代坏请求&lt;/li&gt;
  &lt;li&gt;404 （not found）资源不存在&lt;/li&gt;
  &lt;li&gt;406 （not acceptable）服务端不支持所需表示&lt;/li&gt;
  &lt;li&gt;500 （internal server error）通用错误响应&lt;/li&gt;
  &lt;li&gt;503 （Service Unavailable）服务端当前无法处理请求
    &lt;h3 id=&quot;post&quot;&gt;POST&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;不安全且不幂等&lt;/li&gt;
  &lt;li&gt;200（OK）如果现有资源已被更改&lt;/li&gt;
  &lt;li&gt;201（created）如果新资源被创建&lt;/li&gt;
  &lt;li&gt;202（accepted）已接受处理请求但尚未完成（异步处理）&lt;/li&gt;
  &lt;li&gt;301（Moved Permanently）资源的URL被更新&lt;/li&gt;
  &lt;li&gt;303（See Other）其他（如，负载均衡）&lt;/li&gt;
  &lt;li&gt;400（bad request）指代坏请求&lt;/li&gt;
  &lt;li&gt;404 （not found）资源不存在&lt;/li&gt;
  &lt;li&gt;406 （not acceptable）服务端不支持所需表示&lt;/li&gt;
  &lt;li&gt;409 （conflict）通用冲突&lt;/li&gt;
  &lt;li&gt;412 （Precondition Failed）前置条件失败（如执行条件更新时的冲突）&lt;/li&gt;
  &lt;li&gt;415 （unsupported media type）接受到的表示不受支持&lt;/li&gt;
  &lt;li&gt;500 （internal server error）通用错误响应&lt;/li&gt;
  &lt;li&gt;503 （Service Unavailable）服务端当前无法处理请求
    &lt;h3 id=&quot;put&quot;&gt;PUT&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;不安全但幂等&lt;/li&gt;
  &lt;li&gt;200 （OK）如果现有资源已被更改&lt;/li&gt;
  &lt;li&gt;201 （created）如果新资源被创建&lt;/li&gt;
  &lt;li&gt;301（Moved Permanently）资源的URL已更改&lt;/li&gt;
  &lt;li&gt;303 （See Other）其他（如，负载均衡）&lt;/li&gt;
  &lt;li&gt;400 （bad request）指代坏请求&lt;/li&gt;
  &lt;li&gt;404 （not found）资源不存在&lt;/li&gt;
  &lt;li&gt;406 （not acceptable）服务端不支持所需表示&lt;/li&gt;
  &lt;li&gt;409 （conflict）通用冲突&lt;/li&gt;
  &lt;li&gt;412 （Precondition Failed）前置条件失败（如执行条件更新时的冲突）&lt;/li&gt;
  &lt;li&gt;415 （unsupported media type）接受到的表示不受支持&lt;/li&gt;
  &lt;li&gt;500 （internal server error）通用错误响应&lt;/li&gt;
  &lt;li&gt;503 （Service Unavailable）服务端当前无法处理请求
    &lt;h3 id=&quot;delete&quot;&gt;DELETE&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;不安全但幂等&lt;/li&gt;
  &lt;li&gt;200 （OK）资源已被删除&lt;/li&gt;
  &lt;li&gt;301 （Moved Permanently）资源的URIL已更改&lt;/li&gt;
  &lt;li&gt;303 （See Other）其他（如，负载均衡）&lt;/li&gt;
  &lt;li&gt;400 （bad request）指代坏请求&lt;/li&gt;
  &lt;li&gt;404 （not found）资源不存在&lt;/li&gt;
  &lt;li&gt;409 （conflict）通用冲突&lt;/li&gt;
  &lt;li&gt;500 （internal server error）通用错误响应&lt;/li&gt;
  &lt;li&gt;503 （Service Unavailable）服务端当前无法处理请求&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 27 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//8.%E7%94%9F%E4%BA%A7%E8%A7%84%E8%8C%83%E4%B8%8E%E6%8C%87%E5%8D%97/8.2.REST-API-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//8.%E7%94%9F%E4%BA%A7%E8%A7%84%E8%8C%83%E4%B8%8E%E6%8C%87%E5%8D%97/8.2.REST-API-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/</guid>
        
        
        <category>8.生产规范与指南</category>
        
      </item>
    
      <item>
        <title>7.2 Database design（数据库设计）</title>
        <description>
&lt;p&gt;蓝框部分为&lt;strong&gt;用户及权限系统数据库设计&lt;/strong&gt;，其余为&lt;strong&gt;子系统数据库设计&lt;/strong&gt;。
&lt;img src=&quot;/styles/images/7.2/auth-system.jpg&quot; alt=&quot;数据库设计&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 27 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.2.%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.2.%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</guid>
        
        
        <category>7.设计说明书</category>
        
      </item>
    
      <item>
        <title>8.3 协作开发规范</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-准备工作&quot; id=&quot;markdown-toc-1-准备工作&quot;&gt;1 准备工作&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#21-协作方式-1&quot; id=&quot;markdown-toc-21-协作方式-1&quot;&gt;2.1 协作方式-1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#22-协作方式-2&quot; id=&quot;markdown-toc-22-协作方式-2&quot;&gt;2.2 协作方式-2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-备注&quot; id=&quot;markdown-toc-3-备注&quot;&gt;3 备注&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考：https://github.com/SYSUMonkeyEye/MonkeyEye-FE&lt;/p&gt;

&lt;p&gt;每个仓库一般仓库有2个分支，master和dev。主要在 dev 分支上进行开发和测试，功能完善之后再合并到master。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├─master
└─dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;1-准备工作&quot;&gt;1 准备工作&lt;/h2&gt;

&lt;p&gt;在 github 上 fork 仓库到你自己的 github，将你 fork 之后的远程仓库克隆到本地，并在你的本地仓库上添加上游仓库，即源仓库。fork 一般是 fork 了仓库的 master 分支，所以可能还需要自己去切出 dev 分支然后拉取源仓库dev 分支上的内容。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/{你的github}/{仓库名称}
# 上游的源仓库地址只需添加一次
git remote add upstream https://github.com/sysu-swsad-team/{仓库名称.git}
# 切出dev分支并拉取源仓库dev分支上的内容
git checkout -b dev
git pull upstream dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;21-协作方式-1&quot;&gt;2.1 协作方式-1&lt;/h2&gt;

&lt;p&gt;要开发某个模块的时候，在你的本地仓库创建一个分支，例如 mydev。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout -b mydev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;切换之后你的本地仓库上就有3个分支了，如下所示。checkout 之后会自动切换到 mydev 分支。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├─master
├─dev
└─mydev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在 mydev 分支上进行开发和测试，完成相应的功能或者模块，完成之后再切回到 dev 分支将 mydev 的内容合并到 dev。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# mydev分支上提交你的更新
git add *
git commit -m &quot;add something&quot;
# 切换到dev分支
git checkout dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;由于在你开发过程中，我也可能在开发并且更新了仓库，为了避免冲突，在合并分支之前你还需要更新你本地仓库的 dev 分支。先在本地仓库上添加上游仓库 upstream，上游仓库即我的仓库，然后使用 pull 命令从上游仓库拉取更新。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 拉取上游的源仓库dev分支上的更新
git pull upstream dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;更新完 dev 之后，将 mydev 分支合并到 dev 分支并提交到你自己的远程仓库。完成之后，mydev 分支就可以删除了，你也可以继续留着。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 将mydev分支合并到dev，可能会有冲突需要自行解决
git merge mydev
# 推送到你自己的远程仓库，注意这里是push到origin dev，不是upstream dev
git push origin dev
# 删除mydev分支
git branch -d mydev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;推送到自己的远程仓库后，就可以到 github 上面给我发 Pull Request 了，然后等待我合并你的代码。&lt;/p&gt;

&lt;h2 id=&quot;22-协作方式-2&quot;&gt;2.2 协作方式-2&lt;/h2&gt;

&lt;p&gt;嫌上面太麻烦？你也可以直接在 fork 之后的的 dev 分支上面进行开发，然后在发送 PR 之前先从源仓库拉取更新。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 提交你的代码
git add *
git commit -m &quot;add something&quot;
# 拉取上游的源仓库dev分支上的更新，可能会有冲突需要自行解决
git pull upstream dev
# 推送到你自己的远程仓库，注意这里是push到origin dev，不是upstream dev
git push origin dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-备注&quot;&gt;3 备注&lt;/h2&gt;

&lt;p&gt;所有拉取远程仓库的更新的操作请在本地仓库上使用命令行完成。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 拉取上游的源仓库dev分支上的更新
git pull upstream dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;严禁通过其他做法拉取更新（例如在GitHub网站上通过网页操作进行更新然后在本地pull origin dev），以免造成不必要的合并冲突以及多余的commit。&lt;/p&gt;
</description>
        <pubDate>Sun, 26 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//8.%E7%94%9F%E4%BA%A7%E8%A7%84%E8%8C%83%E4%B8%8E%E6%8C%87%E5%8D%97/8.3.%E5%8D%8F%E4%BD%9C%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//8.%E7%94%9F%E4%BA%A7%E8%A7%84%E8%8C%83%E4%B8%8E%E6%8C%87%E5%8D%97/8.3.%E5%8D%8F%E4%BD%9C%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</guid>
        
        
        <category>8.生产规范与指南</category>
        
      </item>
    
      <item>
        <title>7.3 Interface API design（接口 API 设计）</title>
        <description>
&lt;p&gt;按照 &lt;a href=&quot;https://github.com/sysu-swsad-team/niffler-backend&quot;&gt;https://github.com/sysu-swsad-team/niffler-backend&lt;/a&gt; 安装并运行后端，浏览器访问&lt;code class=&quot;highlighter-rouge&quot;&gt;$服务器url(如http://127.0.0.1:8000)/questionnaire/swagger/&lt;/code&gt;即可看到基于swagger的可交互api文档。&lt;/p&gt;

&lt;p&gt;截图如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.3/api_doc.png&quot; alt=&quot;api文档&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 26 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.3.%E6%8E%A5%E5%8F%A3API%E8%AE%BE%E8%AE%A1/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.3.%E6%8E%A5%E5%8F%A3API%E8%AE%BE%E8%AE%A1/</guid>
        
        
        <category>7.设计说明书</category>
        
      </item>
    
      <item>
        <title>7.4 Architecture design（架构设计）</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#架构问题&quot; id=&quot;markdown-toc-架构问题&quot;&gt;架构问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#解决方案说明&quot; id=&quot;markdown-toc-解决方案说明&quot;&gt;解决方案说明&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#逻辑视图&quot; id=&quot;markdown-toc-逻辑视图&quot;&gt;逻辑视图&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#物理视图&quot; id=&quot;markdown-toc-物理视图&quot;&gt;物理视图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;架构问题&quot;&gt;架构问题&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;服务外部用户&lt;/li&gt;
  &lt;li&gt;需求变动快&lt;/li&gt;
  &lt;li&gt;运用规模变化大&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;解决方案说明&quot;&gt;解决方案说明&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;按照不同服务功能拆分微服务&lt;br /&gt;
  一个服务完成一个独立的功能，独立维护，按需扩展&lt;/li&gt;
  &lt;li&gt;前后端分离&lt;br /&gt;
  优化用户体验，接口简洁易维护，实现前端多渠道集成&lt;/li&gt;
  &lt;li&gt;无状态服务&lt;br /&gt;
  把数据迁移到分布式缓存中存储，让业务服务变成一个无状态的计算节点，实现服务按需动态伸缩&lt;/li&gt;
  &lt;li&gt;Restful通信风格&lt;br /&gt;
  无状态协议HTTP扩展能力强，JSON 报文序列化轻量简单，语言无关&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;逻辑视图&quot;&gt;逻辑视图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/styles/images/7.4/logicView.jpg&quot; alt=&quot;逻辑视图&quot; height=&quot;60%&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;物理视图&quot;&gt;物理视图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/styles/images/7.4/physicalView.jpg&quot; alt=&quot;物理视图&quot; height=&quot;90%&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;参考&lt;br /&gt;
&lt;a href=&quot;https://juejin.im/entry/59bf30876fb9a00a583176a1&quot;&gt;微服务的4大设计原则和19个解决方案&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 25 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.4.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.4.%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid>
        
        
        <category>7.设计说明书</category>
        
      </item>
    
      <item>
        <title>7.5 Usecase design（用例设计）</title>
        <description>
&lt;p&gt;&lt;a href=&quot;https://sysu-swsad.github.io/swad-guide/12-usecase-realization&quot;&gt;详细设计 - 使用交互图和设计类图实现用例&lt;/a&gt; 团队作业&lt;/p&gt;
</description>
        <pubDate>Fri, 24 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.5.%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.5.%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1/</guid>
        
        
        <category>7.设计说明书</category>
        
      </item>
    
      <item>
        <title>7.6 技术选型理由</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#形式&quot; id=&quot;markdown-toc-形式&quot;&gt;形式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#前端&quot; id=&quot;markdown-toc-前端&quot;&gt;前端&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#后端&quot; id=&quot;markdown-toc-后端&quot;&gt;后端&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;形式&quot;&gt;形式&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;App。App在移动端上能得到最好的用户体验，但对新用户来说安装一个新App的成本较高。&lt;/li&gt;
  &lt;li&gt;Web。相比App来说，Web更加轻量，不需要用户安装额外的应用。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最终选择：客户端和服务端使用Web网页形式。&lt;/p&gt;

&lt;h2 id=&quot;前端&quot;&gt;前端&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;JQuery&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;随着HTML5新的DOM标准，加入了很多原生的新的方法，并且目前主流浏览器兼容性已经大大提高，甚至连JQuery非常好用的ajax都可以被浏览器原生提供的Fetch API代替，再加上最近比较盛行的各种以数据为驱动的前端框架，JQuery的DOM元素处理方式会慢慢被模块化开发代替。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;提供了用css选择符来选择dom元素的API&lt;/li&gt;
  &lt;li&gt;提供了浏览器检测的API&lt;/li&gt;
  &lt;li&gt;提供了兼容的功能性API&lt;/li&gt;
  &lt;li&gt;提供了DOM的批处理操作&lt;/li&gt;
  &lt;li&gt;提供了DOM操作的链式操作&lt;/li&gt;
  &lt;li&gt;提供了插件机制&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Angular&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;验证功能错误信息显示比较薄弱，需要写很多模板标签。&lt;/li&gt;
  &lt;li&gt;脏值检查性能较差。&lt;/li&gt;
  &lt;li&gt;没有完美兼容低版本，升级之后可能会出现兼容性问题。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;依赖注入。将后端语言的设计模式赋予前端代码，这意味着前端的代码可以提高重用性和灵活性，未来的模式可能将大量操作放在客户端，服务端只提供数据来源和其它客户端无法完成的操作。&lt;/li&gt;
  &lt;li&gt;双向数据绑定。数据绑定可能是AngularJS最酷最实用的特性。它能够帮助你避免书写大量的初始代码，从而节约开发时间。一个典型的Web应用可能包含了80%的代码用来处理、查询和监听DOM。数据绑定能够大大减少代码量。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Vue.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;生态环境差，不如Angular。&lt;/li&gt;
  &lt;li&gt;社区不大。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MVVM模式，组件化开发，通过setter与getter以及VDOM提供了较好的性能。&lt;/li&gt;
  &lt;li&gt;文档完整。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最终选择：Vue.js&lt;/p&gt;

&lt;h2 id=&quot;后端&quot;&gt;后端&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. C/C++&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;C语言是非常贴近操作系统的语言，能和操作系统API很好地交互。&lt;/li&gt;
  &lt;li&gt;编译速度快。相比于其它语言的编译器，C语言编译器产生机器代码的速度非常快。C编译器可以在两秒内编译大约1000行代码。C编译器还优化了代码，从而使程序获得更快的执行速度。&lt;/li&gt;
  &lt;li&gt;可移植。C语言是高度可移植的语言。这意味着，一台计算机编写的C程序可以在另一台计算机上轻松地运行而没有任何变化或者只有很小的变化。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;缺乏字符串处理。Web开发最主要的就是字符串的处理，所有的一切几乎都要和字符串打交道。但是 C++ 只有 std::string 标准库提供的字符串类，缺乏方便的 UTF-8 和正则表达式匹配支持等。&lt;/li&gt;
  &lt;li&gt;缺乏 Web 标准的支持，即语言层面上缺乏对 HTTP 协议的支持。Web 是基于 HTTP 协议和 TCP 协议产生的。而 C++ 极度缺乏这方面的支持，只能自己手工处理 Socket 通信。&lt;/li&gt;
  &lt;li&gt;缺乏 HTTP 框架和业务代码之间的交互标准。框架就算完成了 HTTP 通信部分，也没有一个标准框架规定如何和业务代码交互。实际上 C++ 框架实现了自己的交互流程，但是缺乏规范。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2. Java&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;语法简单。Java语言去除了C/C++语言中难以理解、容易混淆的特性，例如头指针，文件、结构、单元、运算符重载、虚拟基础类、多重继承等，使得程序更加严谨、简洁。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;面向对象。Java是一个面向对象的语言。对程序员来说，这意味着要注意应用中的数据和操作数据的方法，而不是严格地用过程来思考。在一个面向对象的系统中，类是数据和操作数据的方法集合。数据和方法一起描述对象的状态和行为。类按照一定的体系和层次结构安排，使得子类可以从超类继承属性和方法。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;平台无关。Java语言可以一次编译，到处运行。Java是解释型语言，Java编译器编译程序生成字节码，而不是通常的机器码。字节码在JVM中解释执行。Java程序可以在任何实现了Java解释程序和运行系统的系统上运行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;提供了对Web应用开发的支持。例如，Applet、servlet和jsp可以用来开发Web应用程序；socket、rmi可以用来开发分布式应用程序的类库。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;开发效率相对较低。&lt;/li&gt;
  &lt;li&gt;虽然上手开发相对容易，但真正理解框架底层的运行原理相对较难，需要大量的学习和开发经验。&lt;/li&gt;
  &lt;li&gt;Java 并没有在第一时间引入新颖的技术和语言特性。&lt;/li&gt;
  &lt;li&gt;Java 本身的规范和不够灵活也导致了代码本身很难优化，好的代码和差的代码在一套规则的束缚下实际上性能并没有多少差距，更多的优化被交给了 JVM。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3. PHP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;语法简单。如果有学习过C和Perl，会很容易上手，并且跟ASP有部分类似。&lt;/li&gt;
  &lt;li&gt;有成熟的开发工具，比如NuPHPed，Zend Studio等。&lt;/li&gt;
  &lt;li&gt;支持很多主流技术，比如WebService、Ajax、XML等。&lt;/li&gt;
  &lt;li&gt;有很多成熟的框架，比如支持MVC的框架：phpMVC，支持类似ASP.net的事件驱动的框架：Prado，支持类似Ruby On Rails的快速开发的框架：Cake等。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;对多线程支持不太好，大多数时候我们只能模拟去实现。&lt;/li&gt;
  &lt;li&gt;解释性语言，运行效率低，且无法常驻内存。&lt;/li&gt;
  &lt;li&gt;缺乏好用的包管理和命令空间，也缺乏好用的模板系统。&lt;/li&gt;
  &lt;li&gt;只支持Web开发，不方便做.exe文件，不方便做桌面应用程序，不方便做手机程序。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;4. Go&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;导入的包不支持自定义版本，项目容易因为包的升级而不可用。&lt;/li&gt;
  &lt;li&gt;垃圾回收机制仍存在一些问题。&lt;/li&gt;
  &lt;li&gt;暂时缺乏比较完善的框架。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Golang 的设计理念很明确，就是将动态类型语言的编程容易度和静态类型语言的安全效率结合起来。&lt;/li&gt;
  &lt;li&gt;部署简单。Go 编译生成的可执行文件无需担心包和库的依赖关系。&lt;/li&gt;
  &lt;li&gt;并发性能好。即使是单个Go应用也能有效利用多个 CPU 核心。&lt;/li&gt;
  &lt;li&gt;自带完善的工具链。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;5. Node.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;默认单进程，单线程，只支持单核CPU，不能充分的利用多核CPU服务器资源。&lt;/li&gt;
  &lt;li&gt;动态语言，可靠性低，调试困难。许多错误只有在运行时才能发现。&lt;/li&gt;
  &lt;li&gt;开源组件库质量参差不齐，更新快，向下不兼容。&lt;/li&gt;
  &lt;li&gt;不方便调试，错误没有stack trace。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;JavaScript 易上手，且有着活跃的社区和很多的第三方库。&lt;/li&gt;
  &lt;li&gt;前端使用 JavaScript，Node.js 能做到全栈开发。&lt;/li&gt;
  &lt;li&gt;使用 NPM 这一优秀的包管理工具。&lt;/li&gt;
  &lt;li&gt;事件驱动。事件驱动的优势在于能够充分利用系统资源，执行代码时无须阻塞等待某些操作完成，有限的资源可以用于其它任务。事件驱动机制是通过内部单线程高效率地维护事件循环队列来实现的，没有多线程的资源占用和上下文切换。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;6. Python&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;作为解释型语言，运行速度较慢。Python的运行速度相比C语言确实慢很多，和Java相比也要慢一些。&lt;/li&gt;
  &lt;li&gt;包管理工具和语言升级会带来混乱，且部署工具生态混乱。&lt;/li&gt;
  &lt;li&gt;缺少有效的性能分析和调试工具。&lt;/li&gt;
  &lt;li&gt;线程不能利用多CPU，这是Python被人诟病最多的一个缺点。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Python的定位是“优雅”、“明确”、“简单”，所以Python程序看上去总是简单易懂，初学者学Python，不但入门容易，而且将来深入下去，可以编写非常复杂的程序。&lt;/li&gt;
  &lt;li&gt;开发效率非常高。Python有非常强大和丰富的第三方库。&lt;/li&gt;
  &lt;li&gt;Python在Web开发方面有很多成熟的框架。&lt;/li&gt;
  &lt;li&gt;Python是一门高级语言，当你用Python语言编写程序的时候，你无需考虑诸如内存管理等一些底层细节。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最终选择：Python，使用Django框架。&lt;/p&gt;
</description>
        <pubDate>Thu, 23 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.6.%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B%E7%90%86%E7%94%B1/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.6.%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B%E7%90%86%E7%94%B1/</guid>
        
        
        <category>7.设计说明书</category>
        
      </item>
    
      <item>
        <title>7.7 模块划分与软件设计技术</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#前端技术应用&quot; id=&quot;markdown-toc-前端技术应用&quot;&gt;前端技术应用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#vuejs-组件化应用构建&quot; id=&quot;markdown-toc-vuejs-组件化应用构建&quot;&gt;Vue.js 组件化应用构建&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vuex-状态管理&quot; id=&quot;markdown-toc-vuex-状态管理&quot;&gt;Vuex 状态管理&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#element-ui-组件库&quot; id=&quot;markdown-toc-element-ui-组件库&quot;&gt;Element-UI 组件库&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#webpack&quot; id=&quot;markdown-toc-webpack&quot;&gt;webpack&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#前端文件结构&quot; id=&quot;markdown-toc-前端文件结构&quot;&gt;前端文件结构&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;前端技术应用&quot;&gt;前端技术应用&lt;/h2&gt;

&lt;p&gt;在前端我们使用了我们将用到下面几个框架与工具：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://cn.vuejs.org/&quot;&gt;Vue.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://vuex.vuejs.org/zh/&quot;&gt;Vuex&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://element.eleme.cn/&quot;&gt;Element-UI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;vuejs-组件化应用构建&quot;&gt;Vue.js 组件化应用构建&lt;/h3&gt;

&lt;p&gt;我们选择 Vue.js 作为我们前端开发的主要框架。Vue.js 是一套构建用户界面的渐进式框架，它只关注视图层，采用自底向上增量开发的设计，目标是通过尽可能简单的 API 实现响应的数据绑定和组合的试图组件，并且 Vue 学习起来非常简单。&lt;/p&gt;

&lt;p&gt;组件系统是 Vue 的一个重要概念，因为它是一种抽象，允许我们使用小型、独立和通常可复用的组件构建大型应用。跟大多数应用界面一样，在我们的前端应用界面系统可以抽象成下面的一个组件树，Vue 的组件化特性非常适合我们的应用构建。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.7/components.png&quot; alt=&quot;components&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们利用 Vue 的组件化特性，将前端界面划分为组件，比如登录/注册界面是一个组件，它又包含登录/注册的子组件。每个组件分文件管理，组件化构建应用可以让我们方便地复用组件。&lt;/p&gt;

&lt;h3 id=&quot;vuex-状态管理&quot;&gt;Vuex 状态管理&lt;/h3&gt;

&lt;p&gt;在构建 Vue 单页面应用时，Vuex 为我们提供了全局状态管理。在 state 中定义的数据后，我们可以在项目中任一个组件中进行获取或修改，并且你的修改可以得到全局的相应变更。当我们想要在项目中定义和使用全局变量时，使用 Vuex 是一个很好的解决方法。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;state：对数据的全局存储&lt;/li&gt;
  &lt;li&gt;getter：和 Vue计算属性 computed 一样，来实时监听 state 值的变化 (最新状态)&lt;/li&gt;
  &lt;li&gt;mutations：对数据的同步更改&lt;/li&gt;
  &lt;li&gt;actions：对数据的异步更改&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vuex:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/7.7/vuex.png&quot; alt=&quot;vuex&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;element-ui-组件库&quot;&gt;Element-UI 组件库&lt;/h3&gt;

&lt;p&gt;Element-UI 是一套基于 Vue 2.x 的组件库， 它提供了构建常见网站的的各种组件，如页面布局、按钮、表单、数据表格、导航菜单、对话框等。使用 Element-UI 能够快速构建一个单页面应用网站。&lt;/p&gt;

&lt;h3 id=&quot;webpack&quot;&gt;webpack&lt;/h3&gt;

&lt;p&gt;通常，我们在构建网页应用时，会有繁杂的 JavaScript 代码和一大堆依赖包。简单来说，webpack 可以看做是模块打包机，它帮助分析项目结构，把项目的所有依赖文件打包成一个或多个浏览器可以识别的 JavaScript 文件。选择 webpack 来构建我们的应用能够方便管理、开发与部署。&lt;/p&gt;

&lt;h3 id=&quot;前端文件结构&quot;&gt;前端文件结构&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;src
│   App.vue			&lt;span class=&quot;c&quot;&gt;# 程序入口&lt;/span&gt;
│   main.js			&lt;span class=&quot;c&quot;&gt;# main&lt;/span&gt;
│   utils.js
│
├───api				&lt;span class=&quot;c&quot;&gt;# REST api接口&lt;/span&gt;
│       api.js 			
│       index.js
│
├───assets			&lt;span class=&quot;c&quot;&gt;# 资源文件&lt;/span&gt;
│
├───mock 			&lt;span class=&quot;c&quot;&gt;# mock桩测试代码&lt;/span&gt;
│
├───page			&lt;span class=&quot;c&quot;&gt;# 组件&lt;/span&gt;
│   │   404.vue
│   │   Root.vue 
│   │
│   ├───Balance		&lt;span class=&quot;c&quot;&gt;# 充值与提现界面&lt;/span&gt;
│   │       Balance.vue
│   │
│   ├───components	&lt;span class=&quot;c&quot;&gt;# 应用组件&lt;/span&gt;
│   │       EditQuestionair.vue		&lt;span class=&quot;c&quot;&gt;# 编辑问卷组件&lt;/span&gt;
│   │       ModuleCards.vue			&lt;span class=&quot;c&quot;&gt;# 模块卡组件&lt;/span&gt;
│   │       PageHead.vue			&lt;span class=&quot;c&quot;&gt;# 页头组件&lt;/span&gt;
│   │       ShowQuestionnaire.vue	&lt;span class=&quot;c&quot;&gt;# 显示问卷组件&lt;/span&gt;
│   │
│   ├───Errand		&lt;span class=&quot;c&quot;&gt;# 跑腿办事页面&lt;/span&gt;
│   │       Errand.vue				&lt;span class=&quot;c&quot;&gt;# 跑腿办事主页主组件&lt;/span&gt;
│   │       Create.vue				&lt;span class=&quot;c&quot;&gt;# 创建任务组件子组件&lt;/span&gt;
│   │       Mine.vue				&lt;span class=&quot;c&quot;&gt;# 我的任务组件子组件&lt;/span&gt;
│   │
│   ├───Home		&lt;span class=&quot;c&quot;&gt;# 主页面&lt;/span&gt;
│   │       Home.vue				&lt;span class=&quot;c&quot;&gt;# 主页面主组件&lt;/span&gt;
│   │       Message.vue				&lt;span class=&quot;c&quot;&gt;# 我的信息子组件&lt;/span&gt;
│   │       PersonInfo.vue			&lt;span class=&quot;c&quot;&gt;# 个人信息子组件&lt;/span&gt;
│   │
│   ├───Login		&lt;span class=&quot;c&quot;&gt;# 登录/注册页面&lt;/span&gt;
│   │       Login.vue				&lt;span class=&quot;c&quot;&gt;# 登录/主页页面主组件&lt;/span&gt;
│   │       LoginForm.vue			&lt;span class=&quot;c&quot;&gt;# 登录表单子组件&lt;/span&gt;
│   │       RegisterForm.vue		&lt;span class=&quot;c&quot;&gt;# 注册表单子组件&lt;/span&gt;
│   │
│   └───Questionnaire	&lt;span class=&quot;c&quot;&gt;# 问卷系统页面&lt;/span&gt;
│           Questionnaire.vue		&lt;span class=&quot;c&quot;&gt;# 问卷系统主组件&lt;/span&gt;
│           Create.vue				&lt;span class=&quot;c&quot;&gt;# 创建问卷子组件&lt;/span&gt;
│           Mine.vue				&lt;span class=&quot;c&quot;&gt;# 我的问卷子组件&lt;/span&gt;
│
├───router			&lt;span class=&quot;c&quot;&gt;# 路由&lt;/span&gt;
│       index.js
│
├───styles			&lt;span class=&quot;c&quot;&gt;# 组件用到的样式（可复用）&lt;/span&gt;
│       pages.scss
│       vars.scss
│
└───vuex			&lt;span class=&quot;c&quot;&gt;# vuex状态管理模式&lt;/span&gt;
        store.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 22 May 2019 00:00:00 +0800</pubDate>
        <link>https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.7.%E6%A8%A1%E5%9D%97%E5%88%92%E5%88%86%E4%B8%8E%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%8A%80%E6%9C%AF/</link>
        <guid isPermaLink="true">https://sysu-swsad-team.github.io//7.%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E%E4%B9%A6/7.7.%E6%A8%A1%E5%9D%97%E5%88%92%E5%88%86%E4%B8%8E%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%8A%80%E6%9C%AF/</guid>
        
        
        <category>7.设计说明书</category>
        
      </item>
    
  </channel>
</rss>
